{
	"info": {
		"_postman_id": "4ecda3ea-40b4-49bc-abd7-40f3a8fdb14d",
		"name": "APIScript",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "To do Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Confirm status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Confirm the Status code name has string\r",
									"pm.test(\"Status code name has OK as a string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Verify Count for TotalResult is returned\r",
									"pm.test(\"totalResults is returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"totalResults\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/index.php/todo",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"index.php",
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single Data Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Confirm status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Confirm the Status code name has string\r",
									"pm.test(\"Status code name has OK as a string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Verify user id is returned\r",
									"pm.test(\"User id is returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/index.php/todo/?todo_id=2",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"index.php",
								"todo",
								""
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create New Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Confirm that post request is successful\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"//verify that response returns id\r",
									"pm.test(\"Resonse returns id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"//verify that response returns timestamp\r",
									"pm.test(\"Response returns timestamp\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{userbase_URL}}/api/user",
							"host": [
								"{{userbase_URL}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "Update New Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Confirm the test status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//verify that response returns timestamp\r",
									"pm.test(\"Response returns timestamp\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});\r",
									"\r",
									"//Verify that respnse time is less than 900ms\r",
									"pm.test(\"Response time is less than 900ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{userbase_URL}}/api/user/2",
							"host": [
								"{{userbase_URL}}"
							],
							"path": [
								"api",
								"user",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete User Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Confirm the test status code\r",
									"pm.variables.get(\"variable_key\");\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//Confirm Status code name returns string\r",
									"pm.test(\"Status code name returns No Content\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"//Confirm response body \r",
									"pm.test(\"\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{userbase_URL}}/api/users/2",
							"host": [
								"{{userbase_URL}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}